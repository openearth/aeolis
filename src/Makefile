# Makefile.in generated by automake 1.15 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/aeolis
pkgincludedir = $(includedir)/aeolis
pkglibdir = $(libdir)/aeolis
pkglibexecdir = $(libexecdir)/aeolis
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-apple-darwin14.1.0
host_triplet = x86_64-apple-darwin14.1.0
bin_PROGRAMS = aeolis$(EXEEXT)
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
libaeolis_la_LIBADD =
am__dirstamp = $(am__leading_dot)dirstamp
am_libaeolis_la_OBJECTS = libaeolis_la-iso_c_utils.lo \
	libaeolis_la-logging.lo libaeolis_la-constants_module.lo \
	sand_mud_bed/modules/libaeolis_la-message_module.lo \
	sand_mud_bed/modules/libaeolis_la-string_module.lo \
	sand_mud_bed/modules/libaeolis_la-precision_basics.lo \
	sand_mud_bed/modules/libaeolis_la-precision.lo \
	sand_mud_bed/modules/libaeolis_la-bedcomposition_module.lo \
	libaeolis_la-utils_module.lo libaeolis_la-input_module.lo \
	libaeolis_la-output_module.lo libaeolis_la-moist_module.lo \
	libaeolis_la-bed_module.lo libaeolis_la-wind_module.lo \
	libaeolis_la-init_module.lo libaeolis_la-run_module.lo \
	libaeolis_la-bmi_module.lo
libaeolis_la_OBJECTS = $(am_libaeolis_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
libaeolis_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(FCLD) $(libaeolis_la_FCFLAGS) \
	$(FCFLAGS) $(libaeolis_la_LDFLAGS) $(LDFLAGS) -o $@
PROGRAMS = $(bin_PROGRAMS)
am_aeolis_OBJECTS = aeolis-iso_c_utils.$(OBJEXT) \
	aeolis-logging.$(OBJEXT) aeolis-constants_module.$(OBJEXT) \
	sand_mud_bed/modules/aeolis-message_module.$(OBJEXT) \
	sand_mud_bed/modules/aeolis-string_module.$(OBJEXT) \
	sand_mud_bed/modules/aeolis-precision_basics.$(OBJEXT) \
	sand_mud_bed/modules/aeolis-precision.$(OBJEXT) \
	sand_mud_bed/modules/aeolis-bedcomposition_module.$(OBJEXT) \
	aeolis-utils_module.$(OBJEXT) aeolis-input_module.$(OBJEXT) \
	aeolis-output_module.$(OBJEXT) aeolis-moist_module.$(OBJEXT) \
	aeolis-bed_module.$(OBJEXT) aeolis-wind_module.$(OBJEXT) \
	aeolis-init_module.$(OBJEXT) aeolis-run_module.$(OBJEXT) \
	aeolis-bmi_module.$(OBJEXT) aeolis-AeoLiS.$(OBJEXT)
aeolis_OBJECTS = $(am_aeolis_OBJECTS)
aeolis_LDADD = $(LDADD)
aeolis_LINK = $(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(FCLD) $(aeolis_FCFLAGS) \
	$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.
PPFCCOMPILE = $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS)
LTPPFCCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_FCFLAGS) $(FCFLAGS)
AM_V_PPFC = $(am__v_PPFC_$(V))
am__v_PPFC_ = $(am__v_PPFC_$(AM_DEFAULT_VERBOSITY))
am__v_PPFC_0 = @echo "  PPFC    " $@;
am__v_PPFC_1 = 
FCLD = $(FC)
FCLINK = $(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(FCLD) $(AM_FCFLAGS) $(FCFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_FCLD = $(am__v_FCLD_$(V))
am__v_FCLD_ = $(am__v_FCLD_$(AM_DEFAULT_VERBOSITY))
am__v_FCLD_0 = @echo "  FCLD    " $@;
am__v_FCLD_1 = 
SOURCES = $(libaeolis_la_SOURCES) $(aeolis_SOURCES)
DIST_SOURCES = $(libaeolis_la_SOURCES) $(aeolis_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /Users/hoonhout/GitHub/aeolis/missing aclocal-1.15
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = ar
AUTOCONF = ${SHELL} /Users/hoonhout/GitHub/aeolis/missing autoconf
AUTOHEADER = ${SHELL} /Users/hoonhout/GitHub/aeolis/missing autoheader
AUTOMAKE = ${SHELL} /Users/hoonhout/GitHub/aeolis/missing automake-1.15
AWK = gawk
CC = gcc
CCDEPMODE = depmode=none
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CYGPATH_W = echo
DEFS = -DPACKAGE_NAME=\"AeoLiS\" -DPACKAGE_TARNAME=\"aeolis\" -DPACKAGE_VERSION=\"0.1\" -DPACKAGE_STRING=\"AeoLiS\ 0.1\" -DPACKAGE_BUGREPORT=\"b.m.hoonhout@tudelft.nl\" -DPACKAGE_URL=\"\" -DPACKAGE=\"aeolis\" -DVERSION=\"0.1\" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\".libs/\"
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = dsymutil
DUMPBIN = 
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
FC = gfortran
FCFLAGS = -g -O2
FGREP = /usr/bin/grep -F
GREP = /usr/bin/grep
INSTALL = /opt/local/bin/ginstall -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /opt/local/bin/ld
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = lipo
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAKEINFO = ${SHELL} /Users/hoonhout/GitHub/aeolis/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /opt/local/bin/gmkdir -p
NM = /opt/local/bin/nm
NMEDIT = nmedit
OBJDUMP = false
OBJEXT = o
OTOOL = otool
OTOOL64 = :
PACKAGE = aeolis
PACKAGE_BUGREPORT = b.m.hoonhout@tudelft.nl
PACKAGE_NAME = AeoLiS
PACKAGE_STRING = AeoLiS 0.1
PACKAGE_TARNAME = aeolis
PACKAGE_URL = 
PACKAGE_VERSION = 0.1
PATH_SEPARATOR = :
RANLIB = ranlib
SED = /opt/local/bin/gsed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 0.1
abs_builddir = /Users/hoonhout/GitHub/aeolis/src
abs_srcdir = /Users/hoonhout/GitHub/aeolis/src
abs_top_builddir = /Users/hoonhout/GitHub/aeolis
abs_top_srcdir = /Users/hoonhout/GitHub/aeolis
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
ac_ct_FC = gfortran
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-apple-darwin14.1.0
build_alias = 
build_cpu = x86_64
build_os = darwin14.1.0
build_vendor = apple
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-apple-darwin14.1.0
host_alias = 
host_cpu = x86_64
host_os = darwin14.1.0
host_vendor = apple
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /Users/hoonhout/GitHub/aeolis/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
AUTOMAKE_OPTIONS = subdir-objects
aeolis_SOURCES = iso_c_utils.F90 \
		 logging.F90 \
		 constants_module.F90 \
                 sand_mud_bed/modules/message_module.F90 \
                 sand_mud_bed/modules/string_module.F90 \
                 sand_mud_bed/modules/precision_basics.F90 \
                 sand_mud_bed/modules/precision.F90 \
                 sand_mud_bed/modules/bedcomposition_module.F90 \
		 utils_module.F90 \
		 input_module.F90 \
                 output_module.F90 \
                 moist_module.F90 \
		 bed_module.F90 \
		 wind_module.F90 \
		 init_module.F90 \
		 run_module.F90 \
		 bmi_module.F90 \
		 AeoLiS.F90

aeolis_FCFLAGS = -I$(top_srcdir) -I$(srcdir)/sand_mud_bed/include
lib_LTLIBRARIES = libaeolis.la
libaeolis_la_SOURCES = iso_c_utils.F90 \
		 logging.F90 \
		 constants_module.F90 \
                 sand_mud_bed/modules/message_module.F90 \
                 sand_mud_bed/modules/string_module.F90 \
                 sand_mud_bed/modules/precision_basics.F90 \
                 sand_mud_bed/modules/precision.F90 \
                 sand_mud_bed/modules/bedcomposition_module.F90 \
		 utils_module.F90 \
		 input_module.F90 \
                 output_module.F90 \
                 moist_module.F90 \
		 bed_module.F90 \
		 wind_module.F90 \
		 init_module.F90 \
		 run_module.F90 \
		 bmi_module.F90

libaeolis_la_FCFLAGS = -I$(top_srcdir) -I$(srcdir)/sand_mud_bed/include
libaeolis_la_LDFLAGS = -avoid-version -module -shared -dynamiclib -export-dynamic
all: all-am

.SUFFIXES:
.SUFFIXES: .F90 .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}
sand_mud_bed/modules/$(am__dirstamp):
	@$(MKDIR_P) sand_mud_bed/modules
	@: > sand_mud_bed/modules/$(am__dirstamp)
sand_mud_bed/modules/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) sand_mud_bed/modules/$(DEPDIR)
	@: > sand_mud_bed/modules/$(DEPDIR)/$(am__dirstamp)
sand_mud_bed/modules/libaeolis_la-message_module.lo:  \
	sand_mud_bed/modules/$(am__dirstamp) \
	sand_mud_bed/modules/$(DEPDIR)/$(am__dirstamp)
sand_mud_bed/modules/libaeolis_la-string_module.lo:  \
	sand_mud_bed/modules/$(am__dirstamp) \
	sand_mud_bed/modules/$(DEPDIR)/$(am__dirstamp)
sand_mud_bed/modules/libaeolis_la-precision_basics.lo:  \
	sand_mud_bed/modules/$(am__dirstamp) \
	sand_mud_bed/modules/$(DEPDIR)/$(am__dirstamp)
sand_mud_bed/modules/libaeolis_la-precision.lo:  \
	sand_mud_bed/modules/$(am__dirstamp) \
	sand_mud_bed/modules/$(DEPDIR)/$(am__dirstamp)
sand_mud_bed/modules/libaeolis_la-bedcomposition_module.lo:  \
	sand_mud_bed/modules/$(am__dirstamp) \
	sand_mud_bed/modules/$(DEPDIR)/$(am__dirstamp)

libaeolis.la: $(libaeolis_la_OBJECTS) $(libaeolis_la_DEPENDENCIES) $(EXTRA_libaeolis_la_DEPENDENCIES) 
	$(AM_V_FCLD)$(libaeolis_la_LINK) -rpath $(libdir) $(libaeolis_la_OBJECTS) $(libaeolis_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
sand_mud_bed/modules/aeolis-message_module.$(OBJEXT):  \
	sand_mud_bed/modules/$(am__dirstamp) \
	sand_mud_bed/modules/$(DEPDIR)/$(am__dirstamp)
sand_mud_bed/modules/aeolis-string_module.$(OBJEXT):  \
	sand_mud_bed/modules/$(am__dirstamp) \
	sand_mud_bed/modules/$(DEPDIR)/$(am__dirstamp)
sand_mud_bed/modules/aeolis-precision_basics.$(OBJEXT):  \
	sand_mud_bed/modules/$(am__dirstamp) \
	sand_mud_bed/modules/$(DEPDIR)/$(am__dirstamp)
sand_mud_bed/modules/aeolis-precision.$(OBJEXT):  \
	sand_mud_bed/modules/$(am__dirstamp) \
	sand_mud_bed/modules/$(DEPDIR)/$(am__dirstamp)
sand_mud_bed/modules/aeolis-bedcomposition_module.$(OBJEXT):  \
	sand_mud_bed/modules/$(am__dirstamp) \
	sand_mud_bed/modules/$(DEPDIR)/$(am__dirstamp)

aeolis$(EXEEXT): $(aeolis_OBJECTS) $(aeolis_DEPENDENCIES) $(EXTRA_aeolis_DEPENDENCIES) 
	@rm -f aeolis$(EXEEXT)
	$(AM_V_FCLD)$(aeolis_LINK) $(aeolis_OBJECTS) $(aeolis_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f sand_mud_bed/modules/*.$(OBJEXT)
	-rm -f sand_mud_bed/modules/*.lo

distclean-compile:
	-rm -f *.tab.c

.F90.o:
	$(AM_V_PPFC)$(PPFCCOMPILE) -c -o $@ $<

.F90.obj:
	$(AM_V_PPFC)$(PPFCCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.F90.lo:
	$(AM_V_PPFC)$(LTPPFCCOMPILE) -c -o $@ $<

libaeolis_la-iso_c_utils.lo: iso_c_utils.F90
	$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libaeolis_la_FCFLAGS) $(FCFLAGS) -c -o libaeolis_la-iso_c_utils.lo `test -f 'iso_c_utils.F90' || echo '$(srcdir)/'`iso_c_utils.F90

libaeolis_la-logging.lo: logging.F90
	$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libaeolis_la_FCFLAGS) $(FCFLAGS) -c -o libaeolis_la-logging.lo `test -f 'logging.F90' || echo '$(srcdir)/'`logging.F90

libaeolis_la-constants_module.lo: constants_module.F90
	$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libaeolis_la_FCFLAGS) $(FCFLAGS) -c -o libaeolis_la-constants_module.lo `test -f 'constants_module.F90' || echo '$(srcdir)/'`constants_module.F90

sand_mud_bed/modules/libaeolis_la-message_module.lo: sand_mud_bed/modules/message_module.F90
	$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libaeolis_la_FCFLAGS) $(FCFLAGS) -c -o sand_mud_bed/modules/libaeolis_la-message_module.lo `test -f 'sand_mud_bed/modules/message_module.F90' || echo '$(srcdir)/'`sand_mud_bed/modules/message_module.F90

sand_mud_bed/modules/libaeolis_la-string_module.lo: sand_mud_bed/modules/string_module.F90
	$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libaeolis_la_FCFLAGS) $(FCFLAGS) -c -o sand_mud_bed/modules/libaeolis_la-string_module.lo `test -f 'sand_mud_bed/modules/string_module.F90' || echo '$(srcdir)/'`sand_mud_bed/modules/string_module.F90

sand_mud_bed/modules/libaeolis_la-precision_basics.lo: sand_mud_bed/modules/precision_basics.F90
	$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libaeolis_la_FCFLAGS) $(FCFLAGS) -c -o sand_mud_bed/modules/libaeolis_la-precision_basics.lo `test -f 'sand_mud_bed/modules/precision_basics.F90' || echo '$(srcdir)/'`sand_mud_bed/modules/precision_basics.F90

sand_mud_bed/modules/libaeolis_la-precision.lo: sand_mud_bed/modules/precision.F90
	$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libaeolis_la_FCFLAGS) $(FCFLAGS) -c -o sand_mud_bed/modules/libaeolis_la-precision.lo `test -f 'sand_mud_bed/modules/precision.F90' || echo '$(srcdir)/'`sand_mud_bed/modules/precision.F90

sand_mud_bed/modules/libaeolis_la-bedcomposition_module.lo: sand_mud_bed/modules/bedcomposition_module.F90
	$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libaeolis_la_FCFLAGS) $(FCFLAGS) -c -o sand_mud_bed/modules/libaeolis_la-bedcomposition_module.lo `test -f 'sand_mud_bed/modules/bedcomposition_module.F90' || echo '$(srcdir)/'`sand_mud_bed/modules/bedcomposition_module.F90

libaeolis_la-utils_module.lo: utils_module.F90
	$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libaeolis_la_FCFLAGS) $(FCFLAGS) -c -o libaeolis_la-utils_module.lo `test -f 'utils_module.F90' || echo '$(srcdir)/'`utils_module.F90

libaeolis_la-input_module.lo: input_module.F90
	$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libaeolis_la_FCFLAGS) $(FCFLAGS) -c -o libaeolis_la-input_module.lo `test -f 'input_module.F90' || echo '$(srcdir)/'`input_module.F90

libaeolis_la-output_module.lo: output_module.F90
	$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libaeolis_la_FCFLAGS) $(FCFLAGS) -c -o libaeolis_la-output_module.lo `test -f 'output_module.F90' || echo '$(srcdir)/'`output_module.F90

libaeolis_la-moist_module.lo: moist_module.F90
	$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libaeolis_la_FCFLAGS) $(FCFLAGS) -c -o libaeolis_la-moist_module.lo `test -f 'moist_module.F90' || echo '$(srcdir)/'`moist_module.F90

libaeolis_la-bed_module.lo: bed_module.F90
	$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libaeolis_la_FCFLAGS) $(FCFLAGS) -c -o libaeolis_la-bed_module.lo `test -f 'bed_module.F90' || echo '$(srcdir)/'`bed_module.F90

libaeolis_la-wind_module.lo: wind_module.F90
	$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libaeolis_la_FCFLAGS) $(FCFLAGS) -c -o libaeolis_la-wind_module.lo `test -f 'wind_module.F90' || echo '$(srcdir)/'`wind_module.F90

libaeolis_la-init_module.lo: init_module.F90
	$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libaeolis_la_FCFLAGS) $(FCFLAGS) -c -o libaeolis_la-init_module.lo `test -f 'init_module.F90' || echo '$(srcdir)/'`init_module.F90

libaeolis_la-run_module.lo: run_module.F90
	$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libaeolis_la_FCFLAGS) $(FCFLAGS) -c -o libaeolis_la-run_module.lo `test -f 'run_module.F90' || echo '$(srcdir)/'`run_module.F90

libaeolis_la-bmi_module.lo: bmi_module.F90
	$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libaeolis_la_FCFLAGS) $(FCFLAGS) -c -o libaeolis_la-bmi_module.lo `test -f 'bmi_module.F90' || echo '$(srcdir)/'`bmi_module.F90

aeolis-iso_c_utils.o: iso_c_utils.F90
	$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(aeolis_FCFLAGS) $(FCFLAGS) -c -o aeolis-iso_c_utils.o `test -f 'iso_c_utils.F90' || echo '$(srcdir)/'`iso_c_utils.F90

aeolis-iso_c_utils.obj: iso_c_utils.F90
	$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(aeolis_FCFLAGS) $(FCFLAGS) -c -o aeolis-iso_c_utils.obj `if test -f 'iso_c_utils.F90'; then $(CYGPATH_W) 'iso_c_utils.F90'; else $(CYGPATH_W) '$(srcdir)/iso_c_utils.F90'; fi`

aeolis-logging.o: logging.F90
	$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(aeolis_FCFLAGS) $(FCFLAGS) -c -o aeolis-logging.o `test -f 'logging.F90' || echo '$(srcdir)/'`logging.F90

aeolis-logging.obj: logging.F90
	$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(aeolis_FCFLAGS) $(FCFLAGS) -c -o aeolis-logging.obj `if test -f 'logging.F90'; then $(CYGPATH_W) 'logging.F90'; else $(CYGPATH_W) '$(srcdir)/logging.F90'; fi`

aeolis-constants_module.o: constants_module.F90
	$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(aeolis_FCFLAGS) $(FCFLAGS) -c -o aeolis-constants_module.o `test -f 'constants_module.F90' || echo '$(srcdir)/'`constants_module.F90

aeolis-constants_module.obj: constants_module.F90
	$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(aeolis_FCFLAGS) $(FCFLAGS) -c -o aeolis-constants_module.obj `if test -f 'constants_module.F90'; then $(CYGPATH_W) 'constants_module.F90'; else $(CYGPATH_W) '$(srcdir)/constants_module.F90'; fi`

sand_mud_bed/modules/aeolis-message_module.o: sand_mud_bed/modules/message_module.F90
	$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(aeolis_FCFLAGS) $(FCFLAGS) -c -o sand_mud_bed/modules/aeolis-message_module.o `test -f 'sand_mud_bed/modules/message_module.F90' || echo '$(srcdir)/'`sand_mud_bed/modules/message_module.F90

sand_mud_bed/modules/aeolis-message_module.obj: sand_mud_bed/modules/message_module.F90
	$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(aeolis_FCFLAGS) $(FCFLAGS) -c -o sand_mud_bed/modules/aeolis-message_module.obj `if test -f 'sand_mud_bed/modules/message_module.F90'; then $(CYGPATH_W) 'sand_mud_bed/modules/message_module.F90'; else $(CYGPATH_W) '$(srcdir)/sand_mud_bed/modules/message_module.F90'; fi`

sand_mud_bed/modules/aeolis-string_module.o: sand_mud_bed/modules/string_module.F90
	$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(aeolis_FCFLAGS) $(FCFLAGS) -c -o sand_mud_bed/modules/aeolis-string_module.o `test -f 'sand_mud_bed/modules/string_module.F90' || echo '$(srcdir)/'`sand_mud_bed/modules/string_module.F90

sand_mud_bed/modules/aeolis-string_module.obj: sand_mud_bed/modules/string_module.F90
	$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(aeolis_FCFLAGS) $(FCFLAGS) -c -o sand_mud_bed/modules/aeolis-string_module.obj `if test -f 'sand_mud_bed/modules/string_module.F90'; then $(CYGPATH_W) 'sand_mud_bed/modules/string_module.F90'; else $(CYGPATH_W) '$(srcdir)/sand_mud_bed/modules/string_module.F90'; fi`

sand_mud_bed/modules/aeolis-precision_basics.o: sand_mud_bed/modules/precision_basics.F90
	$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(aeolis_FCFLAGS) $(FCFLAGS) -c -o sand_mud_bed/modules/aeolis-precision_basics.o `test -f 'sand_mud_bed/modules/precision_basics.F90' || echo '$(srcdir)/'`sand_mud_bed/modules/precision_basics.F90

sand_mud_bed/modules/aeolis-precision_basics.obj: sand_mud_bed/modules/precision_basics.F90
	$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(aeolis_FCFLAGS) $(FCFLAGS) -c -o sand_mud_bed/modules/aeolis-precision_basics.obj `if test -f 'sand_mud_bed/modules/precision_basics.F90'; then $(CYGPATH_W) 'sand_mud_bed/modules/precision_basics.F90'; else $(CYGPATH_W) '$(srcdir)/sand_mud_bed/modules/precision_basics.F90'; fi`

sand_mud_bed/modules/aeolis-precision.o: sand_mud_bed/modules/precision.F90
	$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(aeolis_FCFLAGS) $(FCFLAGS) -c -o sand_mud_bed/modules/aeolis-precision.o `test -f 'sand_mud_bed/modules/precision.F90' || echo '$(srcdir)/'`sand_mud_bed/modules/precision.F90

sand_mud_bed/modules/aeolis-precision.obj: sand_mud_bed/modules/precision.F90
	$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(aeolis_FCFLAGS) $(FCFLAGS) -c -o sand_mud_bed/modules/aeolis-precision.obj `if test -f 'sand_mud_bed/modules/precision.F90'; then $(CYGPATH_W) 'sand_mud_bed/modules/precision.F90'; else $(CYGPATH_W) '$(srcdir)/sand_mud_bed/modules/precision.F90'; fi`

sand_mud_bed/modules/aeolis-bedcomposition_module.o: sand_mud_bed/modules/bedcomposition_module.F90
	$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(aeolis_FCFLAGS) $(FCFLAGS) -c -o sand_mud_bed/modules/aeolis-bedcomposition_module.o `test -f 'sand_mud_bed/modules/bedcomposition_module.F90' || echo '$(srcdir)/'`sand_mud_bed/modules/bedcomposition_module.F90

sand_mud_bed/modules/aeolis-bedcomposition_module.obj: sand_mud_bed/modules/bedcomposition_module.F90
	$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(aeolis_FCFLAGS) $(FCFLAGS) -c -o sand_mud_bed/modules/aeolis-bedcomposition_module.obj `if test -f 'sand_mud_bed/modules/bedcomposition_module.F90'; then $(CYGPATH_W) 'sand_mud_bed/modules/bedcomposition_module.F90'; else $(CYGPATH_W) '$(srcdir)/sand_mud_bed/modules/bedcomposition_module.F90'; fi`

aeolis-utils_module.o: utils_module.F90
	$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(aeolis_FCFLAGS) $(FCFLAGS) -c -o aeolis-utils_module.o `test -f 'utils_module.F90' || echo '$(srcdir)/'`utils_module.F90

aeolis-utils_module.obj: utils_module.F90
	$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(aeolis_FCFLAGS) $(FCFLAGS) -c -o aeolis-utils_module.obj `if test -f 'utils_module.F90'; then $(CYGPATH_W) 'utils_module.F90'; else $(CYGPATH_W) '$(srcdir)/utils_module.F90'; fi`

aeolis-input_module.o: input_module.F90
	$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(aeolis_FCFLAGS) $(FCFLAGS) -c -o aeolis-input_module.o `test -f 'input_module.F90' || echo '$(srcdir)/'`input_module.F90

aeolis-input_module.obj: input_module.F90
	$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(aeolis_FCFLAGS) $(FCFLAGS) -c -o aeolis-input_module.obj `if test -f 'input_module.F90'; then $(CYGPATH_W) 'input_module.F90'; else $(CYGPATH_W) '$(srcdir)/input_module.F90'; fi`

aeolis-output_module.o: output_module.F90
	$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(aeolis_FCFLAGS) $(FCFLAGS) -c -o aeolis-output_module.o `test -f 'output_module.F90' || echo '$(srcdir)/'`output_module.F90

aeolis-output_module.obj: output_module.F90
	$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(aeolis_FCFLAGS) $(FCFLAGS) -c -o aeolis-output_module.obj `if test -f 'output_module.F90'; then $(CYGPATH_W) 'output_module.F90'; else $(CYGPATH_W) '$(srcdir)/output_module.F90'; fi`

aeolis-moist_module.o: moist_module.F90
	$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(aeolis_FCFLAGS) $(FCFLAGS) -c -o aeolis-moist_module.o `test -f 'moist_module.F90' || echo '$(srcdir)/'`moist_module.F90

aeolis-moist_module.obj: moist_module.F90
	$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(aeolis_FCFLAGS) $(FCFLAGS) -c -o aeolis-moist_module.obj `if test -f 'moist_module.F90'; then $(CYGPATH_W) 'moist_module.F90'; else $(CYGPATH_W) '$(srcdir)/moist_module.F90'; fi`

aeolis-bed_module.o: bed_module.F90
	$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(aeolis_FCFLAGS) $(FCFLAGS) -c -o aeolis-bed_module.o `test -f 'bed_module.F90' || echo '$(srcdir)/'`bed_module.F90

aeolis-bed_module.obj: bed_module.F90
	$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(aeolis_FCFLAGS) $(FCFLAGS) -c -o aeolis-bed_module.obj `if test -f 'bed_module.F90'; then $(CYGPATH_W) 'bed_module.F90'; else $(CYGPATH_W) '$(srcdir)/bed_module.F90'; fi`

aeolis-wind_module.o: wind_module.F90
	$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(aeolis_FCFLAGS) $(FCFLAGS) -c -o aeolis-wind_module.o `test -f 'wind_module.F90' || echo '$(srcdir)/'`wind_module.F90

aeolis-wind_module.obj: wind_module.F90
	$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(aeolis_FCFLAGS) $(FCFLAGS) -c -o aeolis-wind_module.obj `if test -f 'wind_module.F90'; then $(CYGPATH_W) 'wind_module.F90'; else $(CYGPATH_W) '$(srcdir)/wind_module.F90'; fi`

aeolis-init_module.o: init_module.F90
	$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(aeolis_FCFLAGS) $(FCFLAGS) -c -o aeolis-init_module.o `test -f 'init_module.F90' || echo '$(srcdir)/'`init_module.F90

aeolis-init_module.obj: init_module.F90
	$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(aeolis_FCFLAGS) $(FCFLAGS) -c -o aeolis-init_module.obj `if test -f 'init_module.F90'; then $(CYGPATH_W) 'init_module.F90'; else $(CYGPATH_W) '$(srcdir)/init_module.F90'; fi`

aeolis-run_module.o: run_module.F90
	$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(aeolis_FCFLAGS) $(FCFLAGS) -c -o aeolis-run_module.o `test -f 'run_module.F90' || echo '$(srcdir)/'`run_module.F90

aeolis-run_module.obj: run_module.F90
	$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(aeolis_FCFLAGS) $(FCFLAGS) -c -o aeolis-run_module.obj `if test -f 'run_module.F90'; then $(CYGPATH_W) 'run_module.F90'; else $(CYGPATH_W) '$(srcdir)/run_module.F90'; fi`

aeolis-bmi_module.o: bmi_module.F90
	$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(aeolis_FCFLAGS) $(FCFLAGS) -c -o aeolis-bmi_module.o `test -f 'bmi_module.F90' || echo '$(srcdir)/'`bmi_module.F90

aeolis-bmi_module.obj: bmi_module.F90
	$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(aeolis_FCFLAGS) $(FCFLAGS) -c -o aeolis-bmi_module.obj `if test -f 'bmi_module.F90'; then $(CYGPATH_W) 'bmi_module.F90'; else $(CYGPATH_W) '$(srcdir)/bmi_module.F90'; fi`

aeolis-AeoLiS.o: AeoLiS.F90
	$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(aeolis_FCFLAGS) $(FCFLAGS) -c -o aeolis-AeoLiS.o `test -f 'AeoLiS.F90' || echo '$(srcdir)/'`AeoLiS.F90

aeolis-AeoLiS.obj: AeoLiS.F90
	$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(aeolis_FCFLAGS) $(FCFLAGS) -c -o aeolis-AeoLiS.obj `if test -f 'AeoLiS.F90'; then $(CYGPATH_W) 'AeoLiS.F90'; else $(CYGPATH_W) '$(srcdir)/AeoLiS.F90'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf sand_mud_bed/modules/.libs sand_mud_bed/modules/_libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS)
install-binPROGRAMS: install-libLTLIBRARIES

installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f sand_mud_bed/modules/$(DEPDIR)/$(am__dirstamp)
	-rm -f sand_mud_bed/modules/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-libLTLIBRARIES

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean \
	clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-libLTLIBRARIES install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-libLTLIBRARIES

.PRECIOUS: Makefile


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
